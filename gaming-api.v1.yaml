openapi: 3.0.0
info:
  title: gaming-api
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /api/users/:
    post:
      summary: Create New User
      operationId: post-user
      description: Create a new user.
      tags: []
      requestBody:
        description: Post the necessary fields for the API to create a new user.
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required:
                - firstName
                - lastName
                - username
                - password
                - email
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  username: bob.fellow
                  password: foobar
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                required:
                    - accessToken
              examples:
                New User Bob Fellow:
                  value:
                    accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6MSwiaWF0IjoxNDQ0OTE3NjQwLCJuYmYiOjE0NDQ5MTc2NDAsImV4cCI6MTQ0NDkxNzk0MH0.KPmI6WSjRjlpzecPvs3q_T3cJQvAgJvaQAPtk1abC_E"    
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
  /api/login/:
    post:
      summary: Login User
      operationId: login-user
      description: Login user.
      tags: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
            examples:
              Login Bob Fellow:
                value:
                  username: bob.fellow
                  password: foobar
        description: Post the necessary fields for the API to login. Email or Username can be sended as username.
      responses:
        '200':
          description: User Authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                required:
                  - accessToken
              examples:
                Bob Fellow Authenticated:
                  value:
                    accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6MSwiaWF0IjoxNDQ0OTE3NjQwLCJuYmYiOjE0NDQ5MTc2NDAsImV4cCI6MTQ0NDkxNzk0MH0.KPmI6WSjRjlpzecPvs3q_T3cJQvAgJvaQAPtk1abC_E"
        '400':
          description: Missing or Incorrect Required Information
        '401':
          description: Username or password does not match.
  '/api/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    username: bob.fellow
                    createDate: '2020-11-18'
        '401':
          description: Unauthorized
        '404':
          description: User Not Found
components: 
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          username: alice.s
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        username:
          type: string
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - username
        - email
